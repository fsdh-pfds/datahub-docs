trigger:
  branches:
    include:
    - main
 
pool:
  vmImage: 'ubuntu-latest'
 
steps:
- checkout: self
 
- task: AzureCLI@2
  inputs:
    azureSubscription: 'fsdh-static-assets-service-credential'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      storageAccountName='fsdhstaticassetstorage'
      containerName='docs'
      sourceFolder='$(Build.SourcesDirectory)'

      # fileList=$(mktemp)
      # find $sourceFolder -type f > $fileList

      az storage blob upload-batch --destination $containerName --source $sourceFolder --account-name $storageAccountName --account-key $(storageAccountKey) --overwrite
      
      # while IFS= read -r file; do
      #   relativePath="${file#$sourceFolder/}"
      #   echo "Uploading $file to $containerName/$relativePath"
      #   az storage blob upload --account-name $storageAccountName --container-name $containerName --file "$file" --name "$relativePath" --overwrite
      # done < $fileList
      
      # rm $fileList

- task: AzureCLI@2
  displayName: 'Post-upload Validation of Blobs'
  inputs:
    azureSubscription: 'fsdh-static-assets-service-credential'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      storageAccountName="fsdhstaticassetstorage"
      containerName="docs"
      blobName="_sidebar.md"
      
      echo "Checking if the blob exists..."
      exists=$(az storage blob exists --account-name $storageAccountName --container-name $containerName --name $blobName --output tsv)
      
      if [ "$exists" = "True" ]; then
        echo "Validation successful: Blob exists in container."
      else
        echo "Validation failed: Blob does not exist in container."
        exit 1
      fi